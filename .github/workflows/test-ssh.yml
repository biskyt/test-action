name: Publish Docker images

on:
  push:
    branches:
      - "master"
      - "main"
      - "develop"
      - "release/*"
      - "bugfix/*"
    tags:
      - "*"

jobs:
  push_to_registry:
    name: Build and push production images
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout OEBuilder
        uses: actions/checkout@v2
        with: 
          repository: ToukanLabs/OEImageBuilder
          ref: master
          ssh-key: ${{ secrets.TKL_DEPLOY_PRIVATE_KEY }}

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
            ssh-private-key: ${{ secrets.TKL_DEPLOY_PRIVATE_KEY }}

      # Resolve the github ref to use as a buiold arg in following step(s)
      # This creates ${{ env.GITHUB_REF_NAME }} with the correct branch or tag name 
      - name: Resolve ref
        uses: rlespinasse/github-slug-action@v3.x

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Docker metadata tags for Live image
        id: meta-live
        uses: docker/metadata-action@v3
        with:
          images: toukanlabsdocker/oe-web-live
          # Only apply the latest tag to the master branch for the primary image
          flavor: |
            latest=${{ contains(github.ref,'refs/heads/master') }}
          # set tags to symantic versions for each release.
          # NOTE: for semver, the tag must contain 3x parts 1.2.3 (e.g v4.1.0)
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern==v{{major}}
            type=edge,branch=develop

      - name: Build and push Live image
        uses: docker/build-push-action@v2
        with:
          ssh: |
              default=${{ env.SSH_AUTH_SOCK }}
          context: ./Web-Live
          push: true
          build-args: |
            BUILD_BRANCH=${{ env.GITHUB_REF_NAME }}
            MODULES=
          tags: ${{ steps.meta-live.outputs.tags }}
          labels: ${{ steps.meta-live.outputs.labels }}

      - name: Setup Docker metadata tags for DatabaseBootstrap image
        id: meta-dbboot
        uses: docker/metadata-action@v3
        with:
          images: toukanlabsdocker/oe-db-bootstrap
          # Only apply the latest tag to the master branch for the primary image
          flavor: |
            latest=${{ contains(github.ref,'refs/heads/master') }}
          # set tags to symantic versions for each release.
          # NOTE: for semver, the tag must contain 3x parts 1.2.3 (e.g v4.1.0)
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern==v{{major}}
            type=edge,branch=develop

      - name: Build and push DatabaseBootstrap image
        uses: docker/build-push-action@v2
        with:
          ssh: |
              default=${{ env.SSH_AUTH_SOCK }}
          context: ./DatabaseBootstrap
          push: false
          build-args: |
            BUILD_BRANCH=${{ env.GITHUB_REF_NAME }}
            MODULES=
            OE_VERSION=${{ env.GITHUB_REF_NAME }}
          tags: ${{ steps.meta-dbboot.outputs.tags }}
          labels: ${{ steps.meta-dbboot.outputs.labels }}
          

###########################
   
    #   - name: Build and push develop image
    #     uses: docker/build-push-action@v2
    #     with:
    #       context: ./Web-Live # Need to get remote docker file
    #       push: true
    #       # Add build args
    #       build-args:
    #       tags: ${{ steps.meta.outputs.tags }}
    #       labels: ${{ steps.meta.outputs.labels }}

    #   - name: Build and push CI Test image
    #     uses: docker/build-push-action@v2
    #     with:
    #       context: ./Web-Live # Need to get remote docker file
    #       push: true
    #       build-args: # Add build args
    #       tags: ${{ steps.meta.outputs.tags }}
    #       labels: ${{ steps.meta.outputs.labels }}

      
# description will need updating for each folder
  # update-docker-hub-description:
  #   name: Update docker hub description
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v2

  #     - name: Docker Hub Description
  #       uses: peter-evans/dockerhub-description@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: toukanlabsdocker/rtf
